name: Build Project

env:
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_ENVIRONMENT: github
  ASPNETCORE_ENVIRONMENT: github
  BUILD_PATH: "${{github.workspace}}/artifacts"

on:
  push:
    branches:
      - main
      - develop
    tags:
      - "v*"
  pull_request:
    branches:
      - main
      - develop

jobs:
  build-project:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.3

      - name: Restore Dependencies
        run: dotnet restore

      - name: Build Solution
        run: 'dotnet build --no-restore --configuration Release'

      - name: Publish Web Application
        if: success()
        run: 'dotnet publish ./src/AzureNamer.Service/AzureNamer.Service.csproj --configuration Release --output "${{env.BUILD_PATH}}/application"'

      - name: Build Database
        if: success()
        run: 'msbuild ./database/InstructorIQ.sln /t:Build /p:Configuration=Release /p:OutputPath="${{env.BUILD_PATH}}/database"'

      - name: Upload Web Application Artifact
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: Application
          path: '${{env.BUILD_PATH}}/Application'

      - name: Upload Database Artifact
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: Database
          path: '${{env.BUILD_PATH}}/Database'

  deploy-staging:
    runs-on: ubuntu-latest
    needs: build-project
    if: success() && github.event_name != 'pull_request' && github.ref == 'refs/heads/develop'

    environment:
      name: Staging
      url: https://staging.azurenamer.com/

    steps:
      - name: Download Database Artifact
        uses: actions/download-artifact@v4
        with:
          name: database

      - name: Download Web Application Artifact
        uses: actions/download-artifact@v4
        with:
          name: application

      - name: Deploy SQL Server Database to Azure Staging
        uses: azure/sql-action@v2.2
        with:
          connection-string: ${{secrets.AZURE_SQL_CONNECTION_STAGING}}
          path: './AzureNamer.dacpac'
          action: 'publish'

      - name: Deploy Web Application to Azure Staging
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'web-ls-app-eus-arn-stg-01'
          slot-name: 'Production'
          publish-profile: ${{secrets.PUBLISH_PROFILE_STAGING}}
          package: ./

  deploy-production:
    runs-on: ubuntu-latest
    needs: build-project
    if: success() && github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/v')

    environment:
      name: production
      url: https://azurenamer.com/

    steps:
      - name: Download Database Artifact
        uses: actions/download-artifact@v4
        with:
          name: Database

      - name: Download Web Application Artifact
        uses: actions/download-artifact@v4
        with:
          name: Application

      - name: Deploy SQL Server Database to Azure
        uses: azure/sql-action@v2.2
        with:
          connection-string: ${{secrets.AZURE_SQL_CONNECTION_PRODUCTION}}
          path: './AzureNamer.dacpac'
          action: 'publish'
      - name: Deploy Web Application to Azure Production
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'web-ls-app-eus-arn-prd-01'
          slot-name: 'Production'
          publish-profile: ${{secrets.PUBLISH_PROFILE_PRODUCTION}}
          package: ./

